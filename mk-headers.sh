#!/bin/bash



rebuild(){

    date +"%F %T rebuild $HDR"

    (
    date +"// generated by $0 from $SRC on %F at %T"
    echo "#ifndef $ARMOR"
    echo "#define $ARMOR"
    awk '
    /[/][/] HEADERBEG/{ PASSTHRU=1 ; next }
    /[/][/] HEADEREND/{ PASSTHRU=0 ; print ";" ; next } # ";" mmm... 
    PASSTHRU { print }
    /[/][/] HEADER/{

        ##include <SDL.h> // HEADER
        if(1==index($1,"#")){
            print
            next
        }

        # fn pointers
        # float (*rnd)( unsigned int &seed );   // HEADER
        if(match($0,/[(] *[*] *[^ ]+ *[)] *[(].*[)]/)){
            print "extern " substr($0,1,RSTART+RLENGTH-1) ";"
            next
        }

        #void spots_draw() // HEADER
        #float upsample( float (*get_sample_cb)()){
        if(match($0,/[(].*[)]/)){
            print substr($0,1,RSTART+RLENGTH-1) ";"
            next
        }

        #int   spots_nspots  = 3;    // HEADER
        sub(/\s+=.*/,";",$0)
        print "extern " $0
        next 
    }
    ' < $SRC \
    | cpp -fpreprocessed -dD -E -P  # rimozione commenti
    echo "#endif // $ARMOR"
    ) > $HDR

    true
}


mkdir -p dyn/
grep -m 1 -l "//.*HEADER" *.c* \
| while read SRC ; do
    HDR=${SRC%.*}.h
    ARMOR=_${HDR/./_}_
    HDR=dyn/$HDR
#    echo $SRC $HDR $ARMOR
    [[ $SRC -nt $HDR ]] && rebuild && continue
    [[ $0   -nt $HDR ]] && rebuild && continue
#    [[ $0   -nt $SRC ]] && rebuild && continue
done

true










exit
exit
exit
exit
exit
exit
exit


parsa i sorgenti *.c* e genera i corrispondenti headers sotto dyn
quindi ricordarsi di aggiungere -I dyn/ ai CxxFLAGS
le direttive per generare gli headers sono contenuti in commenti speciali
che segnalano sezioni di /implementazione/
cio che non è implementazione generalmente finisce negli headers
commenti ecc vengono rimossi dagli headers
ovviamente per evitare ricompilazioni superflue
viene generato l'header solo se il sorgente è più recente

2020-08-24 14:21:39
cambiata filosofia. visto che nell'header va molto meno roba che nel sorgente
è meglio avere tags che spingono info nell'header, piuttosto che impediscano la cosa.
... alla fine si scrivono meno direttive.




